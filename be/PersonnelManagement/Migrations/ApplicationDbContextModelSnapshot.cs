// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PersonnelManagement.Data;

#nullable disable

namespace PersonnelManagement.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PersonnelManagement.Models.Entities.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleAccountId");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0a036be5-2081-40ee-aa81-2b0994e25fb1"),
                            CreatedAt = new DateTime(2025, 4, 1, 15, 9, 24, 388, DateTimeKind.Utc).AddTicks(8155),
                            PasswordHash = "$2a$11$hLrT52QVJYTkuoAw5QWT8uwjPD5sZOJtJFNGAjsfZWmQT9cGCXHVm",
                            RoleAccountId = new Guid("88958239-c499-4d74-92e0-74caeb4ff03d"),
                            UpdatedAt = new DateTime(2025, 4, 1, 15, 9, 24, 388, DateTimeKind.Utc).AddTicks(8155),
                            Username = "admin"
                        },
                        new
                        {
                            Id = new Guid("2aa5a408-9056-43a0-a881-c4375243a5d6"),
                            CreatedAt = new DateTime(2025, 4, 1, 15, 9, 24, 597, DateTimeKind.Utc).AddTicks(5183),
                            PasswordHash = "$2a$11$NJVZDwwHIXI/tKohiWA9s.22tcyhRZYmKdYeZ1muBzEQYPeKxYY8O",
                            RoleAccountId = new Guid("6ce51904-32a9-4dc6-ac57-3f3704d65a68"),
                            UpdatedAt = new DateTime(2025, 4, 1, 15, 9, 24, 597, DateTimeKind.Utc).AddTicks(5187),
                            Username = "nguyenhau"
                        });
                });

            modelBuilder.Entity("PersonnelManagement.Models.Entities.Permission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Permission");

                    b.HasData(
                        new
                        {
                            Id = new Guid("58c58baa-bc00-4ec1-9d93-6fd53f9a93ec"),
                            Code = "ADD_PERSONNEl",
                            CreatedAt = new DateTime(2025, 4, 1, 15, 9, 24, 805, DateTimeKind.Utc).AddTicks(8776),
                            Name = "Cho phép thêm nhân viên",
                            UpdatedAt = new DateTime(2025, 4, 1, 15, 9, 24, 805, DateTimeKind.Utc).AddTicks(8777)
                        },
                        new
                        {
                            Id = new Guid("54b9a0c6-ecae-4144-9417-e41c9b1db7e2"),
                            Code = "EDIT_PERSONNEl",
                            CreatedAt = new DateTime(2025, 4, 1, 15, 9, 24, 805, DateTimeKind.Utc).AddTicks(8807),
                            Name = "Cho phép sửa thông tin nhân viên",
                            UpdatedAt = new DateTime(2025, 4, 1, 15, 9, 24, 805, DateTimeKind.Utc).AddTicks(8808)
                        },
                        new
                        {
                            Id = new Guid("a7463264-74a1-42a3-bc4d-b281833f5d0d"),
                            Code = "DELETE_PERSONNEl",
                            CreatedAt = new DateTime(2025, 4, 1, 15, 9, 24, 805, DateTimeKind.Utc).AddTicks(8810),
                            Name = "Cho phép xóa nhân viên",
                            UpdatedAt = new DateTime(2025, 4, 1, 15, 9, 24, 805, DateTimeKind.Utc).AddTicks(8811)
                        },
                        new
                        {
                            Id = new Guid("25722ca8-cca1-4a8b-aa78-14d3cd5dc0e3"),
                            Code = "ADD_PERSONNEl_GROUP",
                            CreatedAt = new DateTime(2025, 4, 1, 15, 9, 24, 805, DateTimeKind.Utc).AddTicks(8812),
                            Name = "Cho phép thêm phân nhóm nhân viên",
                            UpdatedAt = new DateTime(2025, 4, 1, 15, 9, 24, 805, DateTimeKind.Utc).AddTicks(8813)
                        },
                        new
                        {
                            Id = new Guid("13a7e164-4265-426e-aff8-cda304df4eb5"),
                            Code = "EDIT_PERSONNEl_GROUP",
                            CreatedAt = new DateTime(2025, 4, 1, 15, 9, 24, 805, DateTimeKind.Utc).AddTicks(8815),
                            Name = "Cho phép sửa phân nhóm nhân viên",
                            UpdatedAt = new DateTime(2025, 4, 1, 15, 9, 24, 805, DateTimeKind.Utc).AddTicks(8816)
                        },
                        new
                        {
                            Id = new Guid("584a32a5-236e-4d41-9f00-6bf709d92e87"),
                            Code = "DELETE_PERSONNEl_GROUP",
                            CreatedAt = new DateTime(2025, 4, 1, 15, 9, 24, 805, DateTimeKind.Utc).AddTicks(8818),
                            Name = "Cho phép xóa phân nhóm nhân viên",
                            UpdatedAt = new DateTime(2025, 4, 1, 15, 9, 24, 805, DateTimeKind.Utc).AddTicks(8818)
                        },
                        new
                        {
                            Id = new Guid("3d75129e-ac23-48e3-964c-a0b4f1c9791a"),
                            Code = "VIEW_HISTORY",
                            CreatedAt = new DateTime(2025, 4, 1, 15, 9, 24, 805, DateTimeKind.Utc).AddTicks(8821),
                            Name = "Cho phép xem lịch sử",
                            UpdatedAt = new DateTime(2025, 4, 1, 15, 9, 24, 805, DateTimeKind.Utc).AddTicks(8821)
                        },
                        new
                        {
                            Id = new Guid("85e46dc7-69e0-4cae-a68a-79de683e0f61"),
                            Code = "ADD_ACCOUNT",
                            CreatedAt = new DateTime(2025, 4, 1, 15, 9, 24, 805, DateTimeKind.Utc).AddTicks(8823),
                            Name = "Cho phép thêm tài khoản đăng nhập",
                            UpdatedAt = new DateTime(2025, 4, 1, 15, 9, 24, 805, DateTimeKind.Utc).AddTicks(8824)
                        },
                        new
                        {
                            Id = new Guid("1778ff61-a19e-4f58-abe4-407e42e5445b"),
                            Code = "EDIT_ACCOUNT",
                            CreatedAt = new DateTime(2025, 4, 1, 15, 9, 24, 805, DateTimeKind.Utc).AddTicks(8826),
                            Name = "Cho phép sửa tài khoản đăng nhập",
                            UpdatedAt = new DateTime(2025, 4, 1, 15, 9, 24, 805, DateTimeKind.Utc).AddTicks(8826)
                        },
                        new
                        {
                            Id = new Guid("c83e7f07-564b-41e1-8de4-cabf39013ef9"),
                            Code = "DELETE_ACCOUNT",
                            CreatedAt = new DateTime(2025, 4, 1, 15, 9, 24, 805, DateTimeKind.Utc).AddTicks(8828),
                            Name = "Cho phép xóa tài khoản đăng nhập",
                            UpdatedAt = new DateTime(2025, 4, 1, 15, 9, 24, 805, DateTimeKind.Utc).AddTicks(8829)
                        },
                        new
                        {
                            Id = new Guid("a357f6d3-ed02-48fd-be06-e34f7605c505"),
                            Code = "ADD_ROLE_ACCOUNT",
                            CreatedAt = new DateTime(2025, 4, 1, 15, 9, 24, 805, DateTimeKind.Utc).AddTicks(8830),
                            Name = "Cho phép thêm nhóm phân quyền",
                            UpdatedAt = new DateTime(2025, 4, 1, 15, 9, 24, 805, DateTimeKind.Utc).AddTicks(8831)
                        },
                        new
                        {
                            Id = new Guid("c98f3e02-7535-4998-bdcd-8560dad8c35e"),
                            Code = "EDIT_ROLE_ACCOUNT",
                            CreatedAt = new DateTime(2025, 4, 1, 15, 9, 24, 805, DateTimeKind.Utc).AddTicks(8832),
                            Name = "Cho phép sửa nhóm phân quyền",
                            UpdatedAt = new DateTime(2025, 4, 1, 15, 9, 24, 805, DateTimeKind.Utc).AddTicks(8833)
                        },
                        new
                        {
                            Id = new Guid("3620b076-ad7d-425b-a22a-20f97bf14821"),
                            Code = "DELETE_ROLE_ACCOUNT",
                            CreatedAt = new DateTime(2025, 4, 1, 15, 9, 24, 805, DateTimeKind.Utc).AddTicks(8842),
                            Name = "Cho phép xóa nhóm phân quyền",
                            UpdatedAt = new DateTime(2025, 4, 1, 15, 9, 24, 805, DateTimeKind.Utc).AddTicks(8842)
                        });
                });

            modelBuilder.Entity("PersonnelManagement.Models.Entities.Personnel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AvatarUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DateCreatedCccd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateOfBirth")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumberId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RolePersonnel")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("NumberId")
                        .IsUnique();

                    b.HasIndex("RolePersonnel");

                    b.ToTable("Personnels");
                });

            modelBuilder.Entity("PersonnelManagement.Models.Entities.PersonnelHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonnelId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PersonnelId");

                    b.ToTable("PersonnelHistories");
                });

            modelBuilder.Entity("PersonnelManagement.Models.Entities.RoleAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("RoleAccounts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("88958239-c499-4d74-92e0-74caeb4ff03d"),
                            CreatedAt = new DateTime(2025, 4, 1, 8, 9, 24, 805, DateTimeKind.Utc).AddTicks(8597),
                            RoleName = "Admin",
                            UpdatedAt = new DateTime(2025, 4, 1, 8, 9, 24, 805, DateTimeKind.Utc).AddTicks(8599)
                        },
                        new
                        {
                            Id = new Guid("6ce51904-32a9-4dc6-ac57-3f3704d65a68"),
                            CreatedAt = new DateTime(2025, 4, 1, 8, 9, 24, 805, DateTimeKind.Utc).AddTicks(8608),
                            RoleName = "NhanVien",
                            UpdatedAt = new DateTime(2025, 4, 1, 8, 9, 24, 805, DateTimeKind.Utc).AddTicks(8608)
                        });
                });

            modelBuilder.Entity("PersonnelManagement.Models.Entities.RolePermission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("PermissionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PermissionId");

                    b.HasIndex("RoleAccountId");

                    b.ToTable("RolePermissions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0e4cbf40-c21c-49ef-a8bd-b404b7d99033"),
                            CreatedAt = new DateTime(2025, 4, 1, 8, 9, 24, 805, DateTimeKind.Utc).AddTicks(8949),
                            PermissionId = new Guid("58c58baa-bc00-4ec1-9d93-6fd53f9a93ec"),
                            RoleAccountId = new Guid("88958239-c499-4d74-92e0-74caeb4ff03d"),
                            UpdatedAt = new DateTime(2025, 4, 1, 8, 9, 24, 805, DateTimeKind.Utc).AddTicks(8950)
                        },
                        new
                        {
                            Id = new Guid("3791ebdb-bbae-447f-9164-e9470a719dde"),
                            CreatedAt = new DateTime(2025, 4, 1, 8, 9, 24, 805, DateTimeKind.Utc).AddTicks(8956),
                            PermissionId = new Guid("54b9a0c6-ecae-4144-9417-e41c9b1db7e2"),
                            RoleAccountId = new Guid("88958239-c499-4d74-92e0-74caeb4ff03d"),
                            UpdatedAt = new DateTime(2025, 4, 1, 8, 9, 24, 805, DateTimeKind.Utc).AddTicks(8957)
                        },
                        new
                        {
                            Id = new Guid("ce4335e4-c933-4f09-bbe1-7f51b3f45e83"),
                            CreatedAt = new DateTime(2025, 4, 1, 8, 9, 24, 805, DateTimeKind.Utc).AddTicks(8962),
                            PermissionId = new Guid("a7463264-74a1-42a3-bc4d-b281833f5d0d"),
                            RoleAccountId = new Guid("88958239-c499-4d74-92e0-74caeb4ff03d"),
                            UpdatedAt = new DateTime(2025, 4, 1, 8, 9, 24, 805, DateTimeKind.Utc).AddTicks(8963)
                        },
                        new
                        {
                            Id = new Guid("6c4216d6-c7d4-4dbe-8067-89f8f897a2c5"),
                            CreatedAt = new DateTime(2025, 4, 1, 8, 9, 24, 805, DateTimeKind.Utc).AddTicks(8967),
                            PermissionId = new Guid("25722ca8-cca1-4a8b-aa78-14d3cd5dc0e3"),
                            RoleAccountId = new Guid("88958239-c499-4d74-92e0-74caeb4ff03d"),
                            UpdatedAt = new DateTime(2025, 4, 1, 8, 9, 24, 805, DateTimeKind.Utc).AddTicks(8967)
                        },
                        new
                        {
                            Id = new Guid("acd50988-6b52-42e5-82e2-ef1b431988db"),
                            CreatedAt = new DateTime(2025, 4, 1, 8, 9, 24, 805, DateTimeKind.Utc).AddTicks(8971),
                            PermissionId = new Guid("13a7e164-4265-426e-aff8-cda304df4eb5"),
                            RoleAccountId = new Guid("88958239-c499-4d74-92e0-74caeb4ff03d"),
                            UpdatedAt = new DateTime(2025, 4, 1, 8, 9, 24, 805, DateTimeKind.Utc).AddTicks(8972)
                        },
                        new
                        {
                            Id = new Guid("d9e49fee-dda4-4f66-90b0-e833788a1317"),
                            CreatedAt = new DateTime(2025, 4, 1, 8, 9, 24, 805, DateTimeKind.Utc).AddTicks(8976),
                            PermissionId = new Guid("584a32a5-236e-4d41-9f00-6bf709d92e87"),
                            RoleAccountId = new Guid("88958239-c499-4d74-92e0-74caeb4ff03d"),
                            UpdatedAt = new DateTime(2025, 4, 1, 8, 9, 24, 805, DateTimeKind.Utc).AddTicks(8977)
                        },
                        new
                        {
                            Id = new Guid("56d220bd-06bc-44d2-be78-7a0df0bd0733"),
                            CreatedAt = new DateTime(2025, 4, 1, 8, 9, 24, 805, DateTimeKind.Utc).AddTicks(8981),
                            PermissionId = new Guid("a357f6d3-ed02-48fd-be06-e34f7605c505"),
                            RoleAccountId = new Guid("88958239-c499-4d74-92e0-74caeb4ff03d"),
                            UpdatedAt = new DateTime(2025, 4, 1, 8, 9, 24, 805, DateTimeKind.Utc).AddTicks(8981)
                        },
                        new
                        {
                            Id = new Guid("eeb2f829-c954-4358-bc67-d78217366a64"),
                            CreatedAt = new DateTime(2025, 4, 1, 8, 9, 24, 805, DateTimeKind.Utc).AddTicks(8989),
                            PermissionId = new Guid("c98f3e02-7535-4998-bdcd-8560dad8c35e"),
                            RoleAccountId = new Guid("88958239-c499-4d74-92e0-74caeb4ff03d"),
                            UpdatedAt = new DateTime(2025, 4, 1, 8, 9, 24, 805, DateTimeKind.Utc).AddTicks(8990)
                        },
                        new
                        {
                            Id = new Guid("1015d3a5-d9ec-473c-bde3-d98c36b9fc46"),
                            CreatedAt = new DateTime(2025, 4, 1, 8, 9, 24, 805, DateTimeKind.Utc).AddTicks(8994),
                            PermissionId = new Guid("3620b076-ad7d-425b-a22a-20f97bf14821"),
                            RoleAccountId = new Guid("88958239-c499-4d74-92e0-74caeb4ff03d"),
                            UpdatedAt = new DateTime(2025, 4, 1, 8, 9, 24, 805, DateTimeKind.Utc).AddTicks(8995)
                        },
                        new
                        {
                            Id = new Guid("7b2fccd4-2256-487a-916c-c272b40d1934"),
                            CreatedAt = new DateTime(2025, 4, 1, 8, 9, 24, 805, DateTimeKind.Utc).AddTicks(8999),
                            PermissionId = new Guid("3d75129e-ac23-48e3-964c-a0b4f1c9791a"),
                            RoleAccountId = new Guid("88958239-c499-4d74-92e0-74caeb4ff03d"),
                            UpdatedAt = new DateTime(2025, 4, 1, 8, 9, 24, 805, DateTimeKind.Utc).AddTicks(9000)
                        },
                        new
                        {
                            Id = new Guid("e83d1905-626c-4b64-b099-cc7101148542"),
                            CreatedAt = new DateTime(2025, 4, 1, 8, 9, 24, 805, DateTimeKind.Utc).AddTicks(9004),
                            PermissionId = new Guid("85e46dc7-69e0-4cae-a68a-79de683e0f61"),
                            RoleAccountId = new Guid("88958239-c499-4d74-92e0-74caeb4ff03d"),
                            UpdatedAt = new DateTime(2025, 4, 1, 8, 9, 24, 805, DateTimeKind.Utc).AddTicks(9004)
                        },
                        new
                        {
                            Id = new Guid("9f380009-8942-4e3c-8e86-fe3fa514e204"),
                            CreatedAt = new DateTime(2025, 4, 1, 8, 9, 24, 805, DateTimeKind.Utc).AddTicks(9008),
                            PermissionId = new Guid("1778ff61-a19e-4f58-abe4-407e42e5445b"),
                            RoleAccountId = new Guid("88958239-c499-4d74-92e0-74caeb4ff03d"),
                            UpdatedAt = new DateTime(2025, 4, 1, 8, 9, 24, 805, DateTimeKind.Utc).AddTicks(9009)
                        },
                        new
                        {
                            Id = new Guid("f643755a-d89c-4140-9b56-589bef76b834"),
                            CreatedAt = new DateTime(2025, 4, 1, 8, 9, 24, 805, DateTimeKind.Utc).AddTicks(9012),
                            PermissionId = new Guid("c83e7f07-564b-41e1-8de4-cabf39013ef9"),
                            RoleAccountId = new Guid("88958239-c499-4d74-92e0-74caeb4ff03d"),
                            UpdatedAt = new DateTime(2025, 4, 1, 8, 9, 24, 805, DateTimeKind.Utc).AddTicks(9013)
                        },
                        new
                        {
                            Id = new Guid("b90df6e1-f160-43d2-8773-9f6d39b1ff21"),
                            CreatedAt = new DateTime(2025, 4, 1, 8, 9, 24, 805, DateTimeKind.Utc).AddTicks(9016),
                            PermissionId = new Guid("3d75129e-ac23-48e3-964c-a0b4f1c9791a"),
                            RoleAccountId = new Guid("6ce51904-32a9-4dc6-ac57-3f3704d65a68"),
                            UpdatedAt = new DateTime(2025, 4, 1, 8, 9, 24, 805, DateTimeKind.Utc).AddTicks(9017)
                        },
                        new
                        {
                            Id = new Guid("4ef3446b-a17e-40d1-bb15-96be21ec5985"),
                            CreatedAt = new DateTime(2025, 4, 1, 8, 9, 24, 805, DateTimeKind.Utc).AddTicks(9021),
                            PermissionId = new Guid("58c58baa-bc00-4ec1-9d93-6fd53f9a93ec"),
                            RoleAccountId = new Guid("6ce51904-32a9-4dc6-ac57-3f3704d65a68"),
                            UpdatedAt = new DateTime(2025, 4, 1, 8, 9, 24, 805, DateTimeKind.Utc).AddTicks(9021)
                        });
                });

            modelBuilder.Entity("PersonnelManagement.Models.Entities.RolePersonnel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("RolePersonnels");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f1137868-e530-423a-a732-8dde59a2d77b"),
                            CreatedAt = new DateTime(2025, 4, 1, 8, 9, 24, 388, DateTimeKind.Utc).AddTicks(7957),
                            RoleName = "HocVien",
                            UpdatedAt = new DateTime(2025, 4, 1, 8, 9, 24, 388, DateTimeKind.Utc).AddTicks(7958)
                        },
                        new
                        {
                            Id = new Guid("dd911a5e-010c-449a-a143-6ce5e23e221c"),
                            CreatedAt = new DateTime(2025, 4, 1, 8, 9, 24, 388, DateTimeKind.Utc).AddTicks(7970),
                            RoleName = "CanBo",
                            UpdatedAt = new DateTime(2025, 4, 1, 8, 9, 24, 388, DateTimeKind.Utc).AddTicks(7971)
                        },
                        new
                        {
                            Id = new Guid("91d1e478-813c-4618-b0f6-3247f1703576"),
                            CreatedAt = new DateTime(2025, 4, 1, 8, 9, 24, 388, DateTimeKind.Utc).AddTicks(7974),
                            RoleName = "Khach",
                            UpdatedAt = new DateTime(2025, 4, 1, 8, 9, 24, 388, DateTimeKind.Utc).AddTicks(7974)
                        });
                });

            modelBuilder.Entity("PersonnelManagement.Models.Entities.Token", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AccountId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Expiration")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRevoked")
                        .HasColumnType("bit");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("AccountId1");

                    b.ToTable("Tokens");
                });

            modelBuilder.Entity("PersonnelManagement.Models.Entities.Account", b =>
                {
                    b.HasOne("PersonnelManagement.Models.Entities.RoleAccount", "RoleAccount")
                        .WithMany("Accounts")
                        .HasForeignKey("RoleAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoleAccount");
                });

            modelBuilder.Entity("PersonnelManagement.Models.Entities.Personnel", b =>
                {
                    b.HasOne("PersonnelManagement.Models.Entities.RolePersonnel", "RolePersonnels")
                        .WithMany("Personnels")
                        .HasForeignKey("RolePersonnel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RolePersonnels");
                });

            modelBuilder.Entity("PersonnelManagement.Models.Entities.PersonnelHistory", b =>
                {
                    b.HasOne("PersonnelManagement.Models.Entities.Personnel", "Personnel")
                        .WithMany("CheckHistory")
                        .HasForeignKey("PersonnelId");

                    b.Navigation("Personnel");
                });

            modelBuilder.Entity("PersonnelManagement.Models.Entities.RolePermission", b =>
                {
                    b.HasOne("PersonnelManagement.Models.Entities.Permission", "Permission")
                        .WithMany("RolePermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PersonnelManagement.Models.Entities.RoleAccount", "RoleAccount")
                        .WithMany("RolePermissions")
                        .HasForeignKey("RoleAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("RoleAccount");
                });

            modelBuilder.Entity("PersonnelManagement.Models.Entities.Token", b =>
                {
                    b.HasOne("PersonnelManagement.Models.Entities.Account", null)
                        .WithMany("RefreshTokens")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PersonnelManagement.Models.Entities.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId1");

                    b.Navigation("Account");
                });

            modelBuilder.Entity("PersonnelManagement.Models.Entities.Account", b =>
                {
                    b.Navigation("RefreshTokens");
                });

            modelBuilder.Entity("PersonnelManagement.Models.Entities.Permission", b =>
                {
                    b.Navigation("RolePermissions");
                });

            modelBuilder.Entity("PersonnelManagement.Models.Entities.Personnel", b =>
                {
                    b.Navigation("CheckHistory");
                });

            modelBuilder.Entity("PersonnelManagement.Models.Entities.RoleAccount", b =>
                {
                    b.Navigation("Accounts");

                    b.Navigation("RolePermissions");
                });

            modelBuilder.Entity("PersonnelManagement.Models.Entities.RolePersonnel", b =>
                {
                    b.Navigation("Personnels");
                });
#pragma warning restore 612, 618
        }
    }
}
